#!/bin/sh

# Traverses all playlists from the playlist directory
# and removes all lines that don't contain real paths.
# Info about the last run gets saved to a log file.
#
# USAGE
# plfix [-p, --pretend]
#
# The pretend option will only produce the log file
# and not touch the actual playlists

pldir="$HOME/Music/Playlists"
music="$HOME/Music"
log="$HOME/.local/share/plfix-latest.log"

pretend=
if [ "$1" = '-p' ] || [ "$1" = '--pretend' ]; then
    pretend=1
fi

counter="$(mktemp -p /tmp plfix.XXXXX)"
dupes="$(mktemp -p /tmp plfix.XXXXX)"
printf "0\n0" >"$counter"
printf '' >"$log"
find "$pldir" -maxdepth 1 -type f -name '*.m3u' | while read -r f; do
    lines="$(wc -l <"$f")"
    awk '!visited[$0]++' "$f" >"$dupes"
    lines2="$(wc -l <"$dupes")"
    [ "$lines2" -lt "$lines" ] && {
        printf "%s\n%s" "$(head -n1 -- "$counter")" "$(( $(sed -n 2p "$counter") + lines - lines2 ))" >"$counter"
        [ -z "$pretend" ] && mv -- "$dupes" "$f"
    }
    i=1
    printf "%s\n" "$f" >>"$log"
    cat -- "$f" | while read -r l; do
        [ ! -f "$music/$l" ] && [ "${l#\#}" = "$l" ] && {
            [ -z "$pretend" ] && sed -i "$i""d" "$f"
            i=$((i - 1))
            printf "\t%s\n" "$l" >>"$log"
            printf "%s\n%s" "$(($(head -n1 -- "$counter") + 1))" "$(sed -n 2p "$counter")" >"$counter"
        }
        i=$((i + 1))
    done
done

count1="$(head -n1 -- "$counter")"
count2="$(sed -n 2p "$counter")"
rm -f -- "$counter" "$dupes"
if [ "$count1" -gt 0 ]; then
    printf "%s %s invalid path%s\n" "$(if [ -z "$pretend" ]; then printf "Removed"; else printf "Detected"; fi)" "$count1" "$([ "$count1" -eq 1 ] || printf s)"
    "$PAGER" "$log"
else
    printf "No invalid paths found\n"
fi
if [ "$count2" -gt 0 ]; then
    printf "%s %s duplicate path%s\n" "$(if [ -z "$pretend" ]; then printf "Removed"; else printf "Detected"; fi)" "$count2" "$([ "$count2" -eq 1 ] || printf s)"
else
    printf "No duplicate paths found\n"
fi

