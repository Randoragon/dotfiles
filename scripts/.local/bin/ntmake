#!/usr/bin/sh

# Invokes all commands necessary to process a troff document
# into PDF using neatroff. All command-line arguments are
# transparently passed to neatroff, and should be used to
# specify the macro packages (if any).
#
# The "rnd" macro package is my own extensions, published
# in this repository: https://github.com/randoragon/tmac-rnd

# Executables with flags
ROFF="ntroff -mpost -msdisp -mskeep -msrefs -mmedia $*"
PPDF="ntpdf -pa4"
EQN="nteqn"
REFR="ntrefer -p ${XDG_CONFIG_HOME:-$HOME/.config}/refer-bib"
PIC="ntpic"
TBL="nttbl"
SOIN="ntsoin"

# If using rnd macros, additional passes will be needed
rnd=
for i in "$@"; do
    [ "$i" = '-mrnd' ] && {
        rnd=1
        break
    }
done

if [ -n "$rnd" ]; then
    # Temporary files for stitching the output together
    raw="$(mktemp --tmpdir ntmake.XXXXX)"
    err="$(mktemp --tmpdir ntmake.XXXXX)"
    toc="$(mktemp --tmpdir ntmake.XXXXX)"
    out="$(mktemp --tmpdir ntmake.XXXXX)"
    chmod 600 -- "$raw" "$err" "$toc" "$out"

    # Store source code in raw, stderr output in err
    cat <&0 >"$raw"
    $SOIN <"$raw" | $REFR | $PIC | $TBL | $EQN | $ROFF >/dev/null 2>"$err"

    # Parse err so that only the lines between "toc_begin" and "toc_end"
    # are included in the toc file. This is a convention that guarantees
    # no other stderr output will pollute the document.
    in=
    :>"$toc"
    while read -r line; do
        if [ "$line" = 'toc_begin' ]; then
            in=1
        elif [ "$line" = 'toc_end' ]; then
            in=
        elif [ -n "$in" ]; then
            printf "%s\n" "$line" >>"$toc"
        fi
    done <"$err"

    # Insert toc into the part of file where '.TOC' is present
    :>"$out"
    while read -r line; do
        if [ "$line" = '.TOC' ]; then
            cat -- "$toc" >>"$out"
        else
            printf "%s\n" "$line" >>"$out"
        fi
    done <"$raw"

    # Compile the final source code
    $SOIN <"$out" | $REFR | $PIC | $TBL | $EQN | $ROFF 2>/dev/null | $PPDF

    # Cleanup
    rm -rf -- "$raw" "$err" "$toc" "$out"
else
    $SOIN <&0 | $REFR | $PIC | $TBL | $EQN | $ROFF 2>/dev/null | $PPDF
fi
