#!/bin/sh

# This script copies the last color scheme from python-wal (pywal)
# and copies it into xresources so that applications can see it.
#
# Requires xresources to have a comment line "! pywal", because 
# all the values are going to be inserted there.
# All colors must be in order, because the script modifies lines
# between "! pywal" pattern and "color15".
#
# The convention is - the comment line in
# Xresources that begins the pywal section
# shall begin with 2 exclamation points
# if automatic theming is enabled, and with
# 3 exclamation points if it is disabled.

file="${XDG_CONFIG_HOME:-$HOME/.config}/X11/Xresources"
pywal="$HOME/.cache/wal/colors"

# Handle errors
[ ! -f "$pywal" ] && echo "pywal_to_xres: '$pywal' file not found" && exit
grep -q '^!\+ pywal.*' "$file" || { echo "pywal_to_xres: no suitable place for substitution detected" && exit; }

# We will compose the output file of three parts: the lines leading to "! pywal", the modified chunk, and the rest
# First, we extract all three parts
leader="$(sed '/^!\+ pywal.*/,$d' "$file")"
chunk="$(sed -n '/^!\+ pywal.*/,$p' "$file" | sed '/.*color15.*/q')"
rest="$(sed '1,/^!\+ pywal.*/d' "$file" | sed '1,/.*color15.*/d')"

# Check if custom theming is enabled by convention
# if it is not, the theme will still be generated,
# but every configuration line will be commented out
enabled="$(grep '^!! pywal' "$file")"

# Substitute colors in xresources
j=1
newchunk=
IFS="
"
for l in $chunk; do
    printf "%s" "$l" | grep -q '^!' || {
        col="$(sed -n "$j"p "$pywal" | tr '[:upper:]' '[:lower:]')"
        [ -n "$enabled" ] && \
        newchunk="$newchunk
$(printf "%s" "$l" | sed "s/#[0-9A-Fa-f]\{6\}/$col/")" || \
        newchunk="$newchunk
!$(printf "%s" "$l" | sed "s/#[0-9A-Fa-f]\{6\}/$col/")"
        j="$((j + 1))"
    }
done
IFS=
newchunk="$(printf "%s" "$newchunk" | sed '/^$/d')"

# Concatenate all 3 parts
printf "%s\n!! pywal - autogenerated\n%s\n%s\n" "$leader" "$newchunk" "$rest" >"$file"

# Reload Xresources
xrdb "$file" 2>/dev/null
