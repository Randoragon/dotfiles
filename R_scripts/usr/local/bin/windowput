#!/bin/bash

# PARAMETER VALUE:
# 1. Moves the active window into one of 9 locations
# u k p
# h m l
# i j o
# (no resizing is performed)
# 
# 2. Moves the active window and resizes it to fill the area
# U K P
# H M L
# I J O
# (using M is equivalent to resizing to the 2nd size and centering)
#
# 3. Moves the active window only in one axis, keeping the second coordinate
#    ^k   
# ^h    ^l
#    ^j   
# (using ^i, ^o, ^u, ^p, ^m is equivalent to i, o, u, p, m)

# define the height in px of the top system-bar (for polybar this is "height" + 2*"border")
TOPMARGIN=22

# define the height of a window decorator (for i3 this is roughly "font" size + 10)
DECO_H=18

# define the border thickness of windows
BORDER=2

# get width of screen and height of screen
SCREEN_W=$(xwininfo -root | awk '$1=="Width:" {print $2}')
SCREEN_H=$(xwininfo -root | awk '$1=="Height:" {print $2}')
SCREEN_HS=$(( $SCREEN_H - $TOPMARGIN ))

# get geometry of the active window
WIN_X=$(( $(xwininfo -id $(xdotool getactivewindow) | awk '$1=="Absolute" && $3=="X:" {print $4}') ))
WIN_Y=$(( $(xwininfo -id $(xdotool getactivewindow) | awk '$1=="Absolute" && $3=="Y:" {print $4}') ))
WIN_W=$(( $(xwininfo -id $(xdotool getactivewindow) | awk '$1=="Width:" {print $2}') ))
WIN_H=$(( $(xwininfo -id $(xdotool getactivewindow) | awk '$1=="Height:" {print $2}') ))

# if i3 is installed, enable floating
if hash i3-msg 2>/dev/null; then
    i3-msg -q "floating enable, border normal"
fi

# set the window's position based on the passed parameter
POSITION=$1
## 1. (and parts of 3. which fall back to 1.)
if [ "$POSITION" == "u" ] || [ "$POSITION" == "^u" ]; then
    X=$BORDER
    Y=$(( $TOPMARGIN + $DECO_H  ))
    wmctrl -r :ACTIVE: -b remove,maximized_vert,maximized_horz && wmctrl -r :ACTIVE: -e 0,$X,$Y,$WIN_W,$WIN_H
elif [ "$POSITION" == "i" ] || [ "$POSITION" == "^i" ]; then
    X=$BORDER
    Y=$(( $SCREEN_H - $WIN_H - $BORDER ))
    wmctrl -r :ACTIVE: -b remove,maximized_vert,maximized_horz && wmctrl -r :ACTIVE: -e 0,$X,$Y,$WIN_W,$WIN_H
elif [ "$POSITION" == "o" ] || [ "$POSITION" == "^o" ]; then
    X=$(( $SCREEN_W - $WIN_W - $BORDER ))
    Y=$(( $SCREEN_H - $WIN_H - $BORDER ))
    wmctrl -r :ACTIVE: -b remove,maximized_vert,maximized_horz && wmctrl -r :ACTIVE: -e 0,$X,$Y,$WIN_W,$WIN_H
elif [ "$POSITION" == "p" ] || [ "$POSITION" == "^p" ]; then
    X=$(( $SCREEN_W - $WIN_W - $BORDER ))
    Y=$(( $TOPMARGIN + $DECO_H  ))
    wmctrl -r :ACTIVE: -b remove,maximized_vert,maximized_horz && wmctrl -r :ACTIVE: -e 0,$X,$Y,$WIN_W,$WIN_H
elif [ "$POSITION" == "m" ] || [ "$POSITION" == "^m" ]; then
    X=$(( ($SCREEN_W / 2) - ($WIN_W / 2) ))
    Y=$(( ($SCREEN_H / 2) - ($WIN_H / 2) ))
    wmctrl -r :ACTIVE: -b remove,maximized_vert,maximized_horz && wmctrl -r :ACTIVE: -e 0,$X,$Y,$WIN_W,$WIN_H
elif [ "$POSITION" == "h" ]; then
    X=$BORDER
    Y=$(( ($SCREEN_H / 2) - ($WIN_H / 2) ))
    wmctrl -r :ACTIVE: -b remove,maximized_vert,maximized_horz && wmctrl -r :ACTIVE: -e 0,$X,$Y,$WIN_W,$WIN_H
elif [ "$POSITION" == "j" ]; then
    X=$(( ($SCREEN_W / 2) - ($WIN_W / 2) ))
    Y=$(( $SCREEN_H - $WIN_H - $BORDER ))
    wmctrl -r :ACTIVE: -b remove,maximized_vert,maximized_horz && wmctrl -r :ACTIVE: -e 0,$X,$Y,$WIN_W,$WIN_H
elif [ "$POSITION" == "k" ]; then
    X=$(( ($SCREEN_W / 2) - ($WIN_W / 2) ))
    Y=$(( $TOPMARGIN + $DECO_H  ))
    wmctrl -r :ACTIVE: -b remove,maximized_vert,maximized_horz && wmctrl -r :ACTIVE: -e 0,$X,$Y,$WIN_W,$WIN_H
elif [ "$POSITION" == "l" ]; then
    X=$(( $SCREEN_W - $WIN_W - $BORDER ))
    Y=$(( ($SCREEN_H / 2) - ($WIN_H / 2) ))
    wmctrl -r :ACTIVE: -b remove,maximized_vert,maximized_horz && wmctrl -r :ACTIVE: -e 0,$X,$Y,$WIN_W,$WIN_H
## 2.
elif [ "$POSITION" == "U" ]; then
    X=$BORDER
    Y=$(( $DECO_H + $TOPMARGIN ))
    W=$(( $SCREEN_W / 2 ))
    H=$(( ($SCREEN_H - $TOPMARGIN) / 2 ))
    wmctrl -r :ACTIVE: -b remove,maximized_vert,maximized_horz && wmctrl -r :ACTIVE: -e 0,$X,$Y,$W,$H
elif [ "$POSITION" == "I" ]; then
    X=$BORDER
    Y=$(( $SCREEN_H - $WIN_H - $BORDER ))
    W=$(( $SCREEN_W / 2 ))
    H=$(( ($SCREEN_H - $TOPMARGIN) / 2 ))
    wmctrl -r :ACTIVE: -b remove,maximized_vert,maximized_horz && wmctrl -r :ACTIVE: -e 0,$X,$Y,$W,$H
elif [ "$POSITION" == "O" ]; then
    X=$(( $SCREEN_W - $WIN_W - $BORDER ))
    Y=$(( $SCREEN_H - $WIN_H - $BORDER ))
    W=$(( $SCREEN_W / 2 ))
    H=$(( ($SCREEN_H - $TOPMARGIN) / 2 ))
    wmctrl -r :ACTIVE: -b remove,maximized_vert,maximized_horz && wmctrl -r :ACTIVE: -e 0,$X,$Y,$W,$H
elif [ "$POSITION" == "P" ]; then
    X=$(( $SCREEN_W - $WIN_W - $BORDER ))
    Y=$(( $DECO_H + $TOPMARGIN ))
    W=$(( $SCREEN_W / 2 ))
    H=$(( ($SCREEN_H - $TOPMARGIN) / 2 ))
    wmctrl -r :ACTIVE: -b remove,maximized_vert,maximized_horz && wmctrl -r :ACTIVE: -e 0,$X,$Y,$W,$H
elif [ "$POSITION" == "M" ]; then
    X=$(( $SCREEN_W / 6 ))
    Y=$(( ($SCREEN_H / 8) ))
    W=$(( $SCREEN_W * 2 / 3 ))
    H=$(( $SCREEN_H * 3 / 4 ))
    wmctrl -r :ACTIVE: -b remove,maximized_vert,maximized_horz && wmctrl -r :ACTIVE: -e 0,$X,$Y,$W,$H
elif [ "$POSITION" == "H" ]; then
    X=$BORDER
    Y=$(( $DECO_H + $TOPMARGIN ))
    W=$(( $SCREEN_W / 2 ))
    H=$(( $SCREEN_H - $DECO_H - $TOPMARGIN - $BORDER ))
    wmctrl -r :ACTIVE: -b remove,maximized_vert,maximized_horz && wmctrl -r :ACTIVE: -e 0,$X,$Y,$W,$H
elif [ "$POSITION" == "J" ]; then
    X=$BORDER
    Y=$(( $SCREEN_H - $WIN_H - $BORDER ))
    W=$(( $SCREEN_W - (2 * $BORDER) ))
    H=$(( ($SCREEN_H - $TOPMARGIN) / 2 ))
    wmctrl -r :ACTIVE: -b remove,maximized_vert,maximized_horz && wmctrl -r :ACTIVE: -e 0,$X,$Y,$W,$H
elif [ "$POSITION" == "K" ]; then
    X=$BORDER
    Y=$(( $TOPMARGIN + $DECO_H ))
    W=$(( $SCREEN_W - (2 * $BORDER) ))
    H=$(( ($SCREEN_H - $TOPMARGIN) / 2 ))
    wmctrl -r :ACTIVE: -b remove,maximized_vert,maximized_horz && wmctrl -r :ACTIVE: -e 0,$X,$Y,$W,$H
elif [ "$POSITION" == "L" ]; then
    X=$(( $SCREEN_W - $WIN_W - $BORDER ))
    Y=$(( $DECO_H + $TOPMARGIN ))
    W=$(( $SCREEN_W / 2 ))
    H=$(( $SCREEN_H - $DECO_H - $TOPMARGIN - $BORDER ))
    wmctrl -r :ACTIVE: -b remove,maximized_vert,maximized_horz && wmctrl -r :ACTIVE: -e 0,$X,$Y,$W,$H
# 3.
elif [ "$POSITION" == "^h" ]; then
    X=$BORDER
    Y=$WIN_Y
    wmctrl -r :ACTIVE: -b remove,maximized_vert,maximized_horz && wmctrl -r :ACTIVE: -e 0,$X,$Y,$WIN_W,$WIN_H
elif [ "$POSITION" == "^j" ]; then
    X=$WIN_X
    Y=$(( $SCREEN_H - $WIN_H - $BORDER ))
    wmctrl -r :ACTIVE: -b remove,maximized_vert,maximized_horz && wmctrl -r :ACTIVE: -e 0,$X,$Y,$WIN_W,$WIN_H
elif [ "$POSITION" == "^k" ]; then
    X=$WIN_X
    Y=$(( $TOPMARGIN + $DECO_H ))
    wmctrl -r :ACTIVE: -b remove,maximized_vert,maximized_horz && wmctrl -r :ACTIVE: -e 0,$X,$Y,$WIN_W,$WIN_H
elif [ "$POSITION" == "^l" ]; then
    X=$(( $SCREEN_W - $WIN_W - $BORDER ))
    Y=$WIN_Y
    wmctrl -r :ACTIVE: -b remove,maximized_vert,maximized_horz && wmctrl -r :ACTIVE: -e 0,$X,$Y,$WIN_W,$WIN_H
fi
