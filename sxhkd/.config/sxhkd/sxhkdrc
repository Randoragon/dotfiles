# Signal sxhkd to reload config
super+ctrl + r
	pkill -USR1 -x sxhkd && notify-send -u low 'sxhkd' 'reloaded config'

# Generic Launchers
ctrl+alt + {i,w,d,f}
	{\
	st -e lf,\
	~/.scripts/surfbm,\
	discord,\
	fsearch\
	}

super + {Return,o,g,c}
	{\
	st,\
	dmenu_run,\
	~/.scripts/mousemode-run,\
	snippet\
	}

# Pass
super+{shift,ctrl} + o
	{~/.scripts/passcpy,~/.scripts/usercpy}

# Notes
super+{shift,ctrl} + n
	{note,note -e}

# Screenshots
{_,ctrl} + Print
	{flameshot gui,flameshot full -c}

# Music and Volume Control
{XF86AudioPlay,super + p}
	mpc --port=$MPD_PORT toggle
{XF86AudioStop,super+shift + p}
	mpc --port=$MPD_PORT stop
{XF86AudioNext,super + apostrophe}
	mpc --port=$MPD_PORT next
{XF86AudioPrev,super + semicolon}
	mpc --port=$MPD_PORT prev
super+shift + semicolon
	mpc --port=$MPD_PORT seek -5
super+shift + apostrophe
	mpc --port=$MPD_PORT seek +5
{XF86AudioMute,super + BackSpace}
	pactl set-sink-mute @DEFAULT_SINK@ toggle
{XF86AudioRaiseVolume,super + equal}
	pactl set-sink-volume @DEFAULT_SINK@ +2%
{XF86AudioLowerVolume,super + minus}
	pactl set-sink-volume @DEFAULT_SINK@ -2%

# Add to playlist
super+ctrl + equal
	~/.scripts/pladd_select

# Drawing Tablet
{_,super} + button11
	~/.scripts/wacom/wacom_pad_b1.sh
{_,super} + button12
	~/.scripts/wacom/wacom_pad_b2.sh
{_,super} + button13
	~/.scripts/wacom/wacom_pad_b3.sh
{_,super} + button14
	~/.scripts/wacom/wacom_pad_b4.sh
{_,super} + button15
	~/.scripts/wacom/wacom_stylus_b1.sh
{_,super} + button16
	~/.scripts/wacom/wacom_stylus_b2.sh

# Backlight
{XF86MonBrightnessUp,XF86MonBrightnessDown}
	xbacklight {-inc,-dec} 5
shift + {XF86MonBrightnessUp,XF86MonBrightnessDown}
	xbacklight -set {100,0}

# Shortcuts Help
super+shift + slash
	groff -ms -t -T pdf -dpaper=a3l -P-pa3 -P-l ~/dotfiles/.other/shortcuts.ms | zathura --mode=fullscreen -

# Laugh Tracks
super + {KP_End,KP_Down,KP_Next}
	~/.scripts/laugh-track {ss,si,l}


#,============#
#    BSPWM    #
#=============#

# GENERAL BINDS
super+shift + {q,r}
	{quitmenu,bspc wm -r}

# NODE BINDS

# Close / kill
super{_,+control} + q
	bspc node -{c,k}

# Focus / swap / move floating
super + {h,j,k,l}
	bspc node -f {west,south,north,east}.!floating
super + {Left,Down,Up,Right}
	bspc node -f {west,south,north,east}.!floating
super+shift + {h,j,k,l}
	{\
	~/.scripts/bspwm/smooth_move.sh h -30 h,\
	~/.scripts/bspwm/smooth_move.sh v +30 j,\
	~/.scripts/bspwm/smooth_move.sh v -30 k,\
	~/.scripts/bspwm/smooth_move.sh h +30 l\
	}
super+shift + {Left,Down,Up,Right}
	{\
	~/.scripts/bspwm/smooth_move.sh h -30 left,\
	~/.scripts/bspwm/smooth_move.sh v +30 down,\
	~/.scripts/bspwm/smooth_move.sh v -30 up,\
	~/.scripts/bspwm/smooth_move.sh h +30 right\
	}

# Minimize / unminimize
super{+shift,+ctrl} + m
	~/.scripts/bspwm/{_,un}minimize.sh

# Send on presel / receptacle
super{_,+shift} + y
	bspc node {_,newest.marked} -n newest.!automatic.local
super{+ctrl,+shift+ctrl} + y
	bspc node {_,newest.marked} -n "$(bspc query -N -n .leaf.\!window.local | head -n1)"

# Swap biggest / flip
super + s
	bspc node -f biggest.local.window && bspc node -s last.local -f last.local
super+shift + s
	bspc query -N -n @parent.horizontal && bspc node @parent -F horizontal || bspc node @parent -F vertical
super+shift+ctrl + s
	bspc node @brother/1 -s @brother/2

# Toggle states / flags
super + {t,ctrl + t,shift + space,f}
	bspc node -t \~{tiled,pseudo_tiled,floating,fullscreen}
super+ctrl + {a,s,z,x}
	bspc node -g {marked,sticky,private,locked}

# Cycle
super + {u,i}
	bspc node -f {next,prev}.local.window.!hidden
super+shift + {u,i}
	bspc node -f {next,prev}.local.window.!hidden.floating
super+ctrl + {u,i}
	bspc node -f {next,prev}.local.window.!hidden.!floating

# Climb / descend the tree
super+shift+ctrl + {u,i,o}
	bspc node -f @{1,parent,2}.!hidden

# Resize
super+ctrl + {h,j,k,l}
	{\
	~/.scripts/bspwm/smooth_resize.sh h -30 h,\
	~/.scripts/bspwm/smooth_resize.sh v +30 j,\
	~/.scripts/bspwm/smooth_resize.sh v -30 k,\
	~/.scripts/bspwm/smooth_resize.sh h +30 l\
	}
super+ctrl + {Left,Down,Up,Right}
	{\
	~/.scripts/bspwm/smooth_resize.sh h -30 left,\
	~/.scripts/bspwm/smooth_resize.sh v +30 down,\
	~/.scripts/bspwm/smooth_resize.sh v -30 up,\
	~/.scripts/bspwm/smooth_resize.sh h +30 right\
	}

# Insert receptacle / toggle presel / throw floating window
super+shift+ctrl + n
	bspc query -N -n focused.floating >/dev/null \
	&& ~/.scripts/bspwm/throw_window.sh c \
	|| bspc node focused -i
super+shift+ctrl + {h,j,k,l}
	{\
	bspc node -p \~west  || ~/.scripts/bspwm/throw_window.sh w,\
	bspc node -p \~south || ~/.scripts/bspwm/throw_window.sh s,\
	bspc node -p \~north || ~/.scripts/bspwm/throw_window.sh n,\
	bspc node -p \~east  || ~/.scripts/bspwm/throw_window.sh e\
	}
super+shift+ctrl + {Left,Down,Up,Right}
	{\
	bspc node -p \~west  || ~/.scripts/bspwm/throw_window.sh w,\
	bspc node -p \~south || ~/.scripts/bspwm/throw_window.sh s,\
	bspc node -p \~north || ~/.scripts/bspwm/throw_window.sh n,\
	bspc node -p \~east  || ~/.scripts/bspwm/throw_window.sh e\
	}

# Set presel ratio
super+shift+ctrl + {1-9}
	bspc node -o 0.{1-9}

# Equalize / balance
super+shift+ctrl + {e,b}
	{\
	bspc node focused.!leaf -E || bspc node @/ -E,\
	bspc node focused.!leaf -B || bspc node @/ -B\
	}

# Rotate parent
super + {z,x}
	bspc node @parent -R {270,90}

# Jump to / bring / swap arbitrary window(s)
super{_,+shift,+ctrl} + 0
	~/.scripts/bspwm/{jumpto,bring,swap}.sh

# DESKTOP BINDS
super{_,+shift} + {1-9,w,e,d}
	bspc {desktop -f,node -d} focused:^{1-9,10,11,12}
super{_,+shift} + bracket{left,right}
	bspc {desktop -f,node -d} "$(~/.scripts/bspwm/get_cycle_desktop.sh {prev,next})"
super{+control,+shift+control} + bracket{left,right}
	bspc {desktop -f,node -d} {prev,next}.local
super + a
	bspc desktop -l next
super{_,+shift} + Tab
	bspc {desktop -f,node -d} last

# MONITOR BINDS
super{_,+shift} + {comma,period}
	bspc {monitor -f,node -m} {prev,next}

# STATUS BAR BINDS
super{_,+shift,+ctrl} + b
	{\
	~/.scripts/bspwm/bar_toggle.sh,\
	polybar-msg cmd restart,\
	polybar-msg cmd quit && bspc config top_padding 0
	}

# SCRATCHPADS
super + {space,m,n,slash}
	~/.scripts/bspwm/scratchpad.sh {\
	sp_term  toggle st -n sp -t scratchpad,\
	sp_music toggle st -n sp ncmpcpp,\
	sp_news  toggle st -n sp dualboat,\
	sp_calc  toggle st -n sp -t qalc qalc\
	}

# TOGGLE GAPS
super+shift+ctrl + 0
	[ "$(bspc config window_gap)" -eq 0 ] \
	&& bspc config window_gap 10 \
	|| bspc config window_gap 0
